{"entries":[{"timestamp":1745295811329,"editorVersion":"2.0.53","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":131,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":52076,"diffs":[[1," "]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":180,"length1":70,"diffs":[[1,"        \"assets.json\"\n"]]},{"start1":209,"length1":31,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]},{"type":"added","filename":"images.g.ts","value":"// Auto-generated code. Do not edit.\nnamespace myImages {\n\n    helpers._registerFactory(\"image\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"image1\":\n            case \"myImage\":return img`\n6 6 6 6 6 6 6 6 \n6 7 7 7 7 7 7 6 \n6 7 7 7 7 7 7 6 \n6 7 7 7 7 1 1 6 \n6 7 7 7 7 1 1 6 \n6 7 7 7 7 7 7 6 \n6 7 7 7 7 7 7 6 \n6 6 6 6 6 6 6 6 \n`;\n            case \"image2\":\n            case \"myImage7\":return img`\n. . e e e e . . \n. 2 3 1 1 3 a . \n. 2 e e e a a . \n. 2 e e e a a . \n. . e e e a . . \n. . . 1 9 . . . \n. . 1 1 1 9 . . \n. . . 1 9 . . . \n`;\n            case \"image3\":\n            case \"myImage0\":return img`\na a a a a a a a \na 2 2 2 2 2 2 a \na 2 2 2 2 2 2 a \na 2 2 2 2 1 1 a \na 2 2 2 2 1 1 a \na 2 2 2 2 2 2 a \na 2 2 2 2 2 2 a \na a a a a a a a \n`;\n            case \"image4\":\n            case \"myImage1\":return img`\nb b b b b b b b \nb 8 8 8 8 8 8 b \nb 8 8 8 8 8 8 b \nb 8 8 8 8 1 1 b \nb 8 8 8 8 1 1 b \nb 8 8 8 8 8 8 b \nb 8 8 8 8 8 8 b \nb b b b b b b b \n`;\n            case \"image5\":\n            case \"myImage2\":return img`\ne e e e e e e e \ne 4 4 4 4 4 4 e \ne 4 4 4 4 4 4 e \ne 4 4 4 4 1 1 e \ne 4 4 4 4 1 1 e \ne 4 4 4 4 4 4 e \ne 4 4 4 4 4 4 e \ne e e e e e e e \n`;\n            case \"image6\":\n            case \"myImage3\":return img`\n1111111111111111111111111\n1333333333333333333333331\n1311111111113111111111131\n131aaaaaaaa131bbbbbbbb131\n131a222222a131b888888b131\n131a222222a131b888888b131\n131a222211a131b888811b131\n131a222211a131b888811b131\n131a222222a131b888888b131\n131a222222a131b888888b131\n131aaaaaaaa131bbbbbbbb131\n1311111111113111111111131\n1333333333333333333333331\n1111111111111111111111111\n`;\n            case \"image7\":\n            case \"myImage4\":return img`\n111111111111111111111111111111111111\n133333333333333333333333333333333331\n131111111111311111111113111111111131\n131aaaaaaaa131bbbbbbbb131eeeeeeee131\n131a222222a131b888888b131e444444e131\n131a222222a131b888888b131e444444e131\n131a222211a131b888811b131e444411e131\n131a222211a131b888811b131e444411e131\n131a222222a131b888888b131e444444e131\n131a222222a131b888888b131e444444e131\n131aaaaaaaa131bbbbbbbb131eeeeeeee131\n131111111111311111111113111111111131\n133333333333333333333333333333333331\n111111111111111111111111111111111111\n`;\n            case \"image8\":\n            case \"myImage5\":return img`\n11111111111111111111111111111111111111111111111\n13333333333333333333333333333333333333333333331\n13111111111131111111111311111111113111111111131\n131aaaaaaaa131bbbbbbbb131eeeeeeee13166666666131\n131a222222a131b888888b131e444444e13167777776131\n131a222222a131b888888b131e444444e13167777776131\n131a222211a131b888811b131e444411e13167777116131\n131a222211a131b888811b131e444411e13167777116131\n131a222222a131b888888b131e444444e13167777776131\n131a222222a131b888888b131e444444e13167777776131\n131aaaaaaaa131bbbbbbbb131eeeeeeee13166666666131\n13111111111131111111111311111111113111111111131\n13333333333333333333333333333333333333333333331\n11111111111111111111111111111111111111111111111\n`;\n            case \"image9\":\n            case \"myImage6\":return img`\n. . . . . . 1 9 \n. . . . . 1 9 8 \n. . . . 1 9 8 . \n1 9 . 1 9 8 . . \n9 b b 9 8 . . . \n. 1 b b . . . . \n1 9 9 b c . . . \n9 9 . c c . . . \n`;\n            case \"image10\":\n            case \"myImage8\":return img`\n. . d d d 4 . . \n. . . d 4 . . . \n. . 1 . . 1 . . \n. 1 . . . . 1 . \n. 1 8 8 8 8 1 . \n. 1 8 8 8 8 1 . \n. 1 8 8 8 8 1 . \n. . 1 1 1 1 . . \n`;\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"animation\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"song\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n\n        }\n        return null;\n    })\n\n}\n// Auto-generated code. Do not edit.\n"},{"type":"added","filename":"images.g.jres","value":"{\n    \"image1\": {\n        \"data\": \"hwQIAAgAAABmZmZmdnd3Z3Z3d2d2d3dndnd3Z3YXcWd2F3FnZmZmZg==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"myImage\"\n    },\n    \"image2\": {\n        \"data\": \"hwQIAAgAAAAAAAAAICIAAD7uDgEe7h4RHu6ekT6qCgmgqgAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"myImage7\"\n    },\n    \"image3\": {\n        \"data\": \"hwQIAAgAAACqqqqqKiIioioiIqIqIiKiKiIioioSIaIqEiGiqqqqqg==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"myImage0\"\n    },\n    \"image4\": {\n        \"data\": \"hwQIAAgAAAC7u7u7i4iIuIuIiLiLiIi4i4iIuIsYgbiLGIG4u7u7uw==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"myImage1\"\n    },\n    \"image5\": {\n        \"data\": \"hwQIAAgAAADu7u7uTkRE5E5ERORORETkTkRE5E4UQeROFEHk7u7u7g==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"myImage2\"\n    },\n    \"image6\": {\n        \"data\": \"hwQZAA4AAAARERERERERADEzMzMzMxMAMREREREREwAxoaqqqhoTADGhIiIiGhMAMaEiIiIaEwAxoSIiIhoTADGhIiIiGhMAMaEiESIaEwAxoSIRIhoTADGhqqqqGhMAMREREREREwAxMzMzMzMTADERERERERMAMbG7u7sbEwAxsYiIiBsTADGxiIiIGxMAMbGIiIgbEwAxsYiIiBsTADGxiBGIGxMAMbGIEYgbEwAxsbu7uxsTADERERERERMAMTMzMzMzEwARERERERERAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"myImage3\"\n    },\n    \"image7\": {\n        \"data\": \"hwQkAA4AAAARERERERERADEzMzMzMxMAMREREREREwAxoaqqqhoTADGhIiIiGhMAMaEiIiIaEwAxoSIiIhoTADGhIiIiGhMAMaEiESIaEwAxoSIRIhoTADGhqqqqGhMAMREREREREwAxMzMzMzMTADERERERERMAMbG7u7sbEwAxsYiIiBsTADGxiIiIGxMAMbGIiIgbEwAxsYiIiBsTADGxiBGIGxMAMbGIEYgbEwAxsbu7uxsTADERERERERMAMTMzMzMzEwAxERERERETADHh7u7uHhMAMeFEREQeEwAx4URERB4TADHhREREHhMAMeFEREQeEwAx4UQRRB4TADHhRBFEHhMAMeHu7u4eEwAxERERERETADEzMzMzMxMAEREREREREQA=\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"myImage4\"\n    },\n    \"image8\": {\n        \"data\": \"hwQvAA4AAAARERERERERADEzMzMzMxMAMREREREREwAxoaqqqhoTADGhIiIiGhMAMaEiIiIaEwAxoSIiIhoTADGhIiIiGhMAMaEiESIaEwAxoSIRIhoTADGhqqqqGhMAMREREREREwAxMzMzMzMTADERERERERMAMbG7u7sbEwAxsYiIiBsTADGxiIiIGxMAMbGIiIgbEwAxsYiIiBsTADGxiBGIGxMAMbGIEYgbEwAxsbu7uxsTADERERERERMAMTMzMzMzEwAxERERERETADHh7u7uHhMAMeFEREQeEwAx4URERB4TADHhREREHhMAMeFEREQeEwAx4UQRRB4TADHhRBFEHhMAMeHu7u4eEwAxERERERETADEzMzMzMxMAMREREREREwAxYWZmZhYTADFhd3d3FhMAMWF3d3cWEwAxYXd3dxYTADFhd3d3FhMAMWF3EXcWEwAxYXcRdxYTADFhZmZmFhMAMREREREREwAxMzMzMzMTABEREREREREA\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"myImage5\"\n    },\n    \"image9\": {\n        \"data\": \"hwQIAAgAAAAAEAmRAJAbmQAAuwkAELnLAJEIzBCJAACRCAAAiQAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"myImage6\"\n    },\n    \"image10\": {\n        \"data\": \"hwQIAAgAAAAAAAAAABARAQ0BiBjdAIgYTQCIGAQBiBgAEBEBAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"myImage8\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}"}]},{"timestamp":1745296381201,"editorVersion":"2.0.53","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":73,"length1":484,"diffs":[[1,"        \"device\": \"*\"\n"]]},{"start1":226,"length1":74,"diffs":[[1,"        \"images.g.jres\"\n"]]}]},{"type":"added","filename":"tilemap.g.jres","value":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}"},{"type":"added","filename":"tilemap.g.ts","value":"// Auto-generated code. Do not edit.\nnamespace myTiles {\n    //% fixedInstance jres blockIdentity=images._tile\n    export const transparency16 = image.ofBuffer(hex``);\n\n    helpers._registerFactory(\"tile\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"transparency16\":return transparency16;\n        }\n        return null;\n    })\n\n}\n// Auto-generated code. Do not edit.\n"}]},{"timestamp":1745296803482,"editorVersion":"2.0.53","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":492,"length1":484,"diffs":[[1,"        \"Extra Effects\": \"github:alexszeto/extra-effects#v3.1.0\"\n"]]},{"start1":739,"length1":48,"diffs":[[1,"        \"tilemap.g.ts\"\n"]]}]},{"type":"added","filename":"tiles-data.ts","value":"const locationDataDict: { [locationKey: string]: { [key: string]: any } } = {};\n\nnamespace tiles {\n\n    function getLocationKey(location: tiles.Location): string {\n        return `${location.col},${location.row}`;\n    }\n\n    function getDataForLocation(location: tiles.Location, key: string): any {\n        const locationKey = getLocationKey(location);\n        const data = locationDataDict[locationKey];\n        return data ? data[key] : undefined;\n    }\n\n    function setDataForLocation(location: tiles.Location, key: string, value: any): void {\n        const locationKey = getLocationKey(location);\n        if (!locationDataDict[locationKey]) {\n            locationDataDict[locationKey] = {};\n        }\n        locationDataDict[locationKey][key] = value;\n    }\n\n    function getSpritesAtLocation(location: tiles.Location): Sprite[] {\n        const locationKey = getLocationKey(location);\n        const data = locationDataDict[locationKey];\n        const spritesAtLocation: Sprite[] = [];\n        if (data) {\n            Object.keys(data).forEach(key => {\n                const value = data[key];\n                if (value instanceof Sprite) {\n                    spritesAtLocation.push(value);\n                }\n            });\n        }\n        return spritesAtLocation;\n    }\n\n\n\n\n    /**\n     * Sets a sprite in the data of a tile\n     */\n    //% blockId=tileDataSetSprite block=\"set $location $key to sprite $value=variables_get(mySprite)\"\n    //% location.shadow=mapgettile\n    //% blockNamespace=scene color=\"#401255\"\n    //% group=\"Data\"\n    //% weight=13\n    //% blockGap=8\n    export function setDataSprite(location: tiles.Location, key: string, value: Sprite): void {\n        setDataForLocation(location, key, value);\n    }\n\n    /**\n     * Gets a sprite in the data of a tile\n     */\n    //% blockId=tileDataGetSprite block=\"$location data $key as sprite\"\n    //% location.shadow=mapgettile\n    //% blockNamespace=scene color=\"#401255\"\n    //% group=\"Data\"\n    //% weight=12\n    //% blockGap=8\n    export function readDataSprite(location: tiles.Location, key: string): Sprite | undefined {\n        return getDataForLocation(location, key) as Sprite;\n    }\n\n    /**\n     * Sets a boolean in the data of a tile\n     */\n    //% blockId=tileDataSetBoolean block=\"set $location $key to boolean $value\"\n    //% location.shadow=mapgettile\n    //% blockNamespace=scene color=\"#401255\"\n    //% group=\"Data\"\n    //% weight=11\n    //% blockGap=8\n    export function setDataBoolean(location: tiles.Location, key: string, value: boolean): void {\n        setDataForLocation(location, key, value);\n    }\n\n    /**\n     * Gets a boolean in the data of a tile\n     */\n    //% blockId=tileDataGetBoolean block=\"$location data $key as boolean\"\n    //% location.shadow=mapgettile\n    //% blockNamespace=scene color=\"#401255\"\n    //% group=\"Data\"\n    //% weight=10\n    //% blockGap=8\n    export function readDataBoolean(location: tiles.Location, key: string): boolean {\n        return getDataForLocation(location, key) as boolean || false;\n    }\n\n    /**\n     * Sets a string in the data of a tile\n     */\n    //% blockId=tileDataSetString block=\"set $location $key to string $value\"\n    //% location.shadow=mapgettile\n    //% blockNamespace=scene color=\"#401255\"\n    //% group=\"Data\"\n    //% weight=9\n    //% blockGap=8\n    export function setDataString(location: tiles.Location, key: string, value: string): void {\n        setDataForLocation(location, key, value);\n    }\n\n    /**\n     * Gets a string in the data of a tile\n     */\n    //% blockId=tileDataGetString block=\"$location data $key as string\"\n    //% location.shadow=mapgettile\n    //% blockNamespace=scene color=\"#401255\"\n    //% group=\"Data\"\n    //% weight=8\n    //% blockGap=8\n    export function readDataString(location: tiles.Location, key: string): string {\n        return getDataForLocation(location, key) as string || \"\";\n    }\n\n    /**\n     * Sets a number in the data of a tile\n     */\n    //% blockId=tileDataSetNumber block=\"set $location $key to number $value\"\n    //% location.shadow=mapgettile\n    //% blockNamespace=scene color=\"#401255\"\n    //% group=\"Data\"\n    //% weight=7\n    //% blockGap=8\n    export function setDataNumber(location: tiles.Location, key: string, value: number): void {\n        setDataForLocation(location, key, value);\n    }\n\n    /**\n     * Changes a number in the data of a tile\n     */\n    //% blockId=tileDataChangeNumber block=\"change $location $key data by $value\"\n    //% location.shadow=mapgettile\n    //% blockNamespace=scene color=\"#401255\"\n    //% group=\"Data\"\n    //% weight=6\n    //% blockGap=8\n    export function changeDataNumber(location: tiles.Location, key: string, value: number): void {\n        let currentValue = readDataNumber(location, key);\n        setDataForLocation(location, key, currentValue + value);\n    }\n\n    /**\n     * Gets a number in the data of a tile\n     */\n    //% blockId=tileDataGetNumber block=\"$location data $key as number\"\n    //% location.shadow=mapgettile\n    //% blockNamespace=scene color=\"#401255\"\n    //% group=\"Data\"\n    //% weight=5\n    //% blockGap=8\n    export function readDataNumber(location: tiles.Location, key: string): number {\n        return getDataForLocation(location, key) as number || 0;\n    }\n\n    /**\n     * Sets an image in the data of a tile\n     */\n    //% blockId=tileDataSetImage block=\"set $location $key to image $value\"\n    //% location.shadow=mapgettile\n    //% value.shadow=screen_image_picker\n    //% blockNamespace=scene color=\"#401255\"\n    //% group=\"Data\"\n    //% weight=4\n    //% blockGap=8\n    export function setDataImage(location: tiles.Location, key: string, value: Image): void {\n        setDataForLocation(location, key, value);\n    }\n\n    /**\n     * Gets an image in the data of a tile\n     */\n    //% blockId=tileDataGetImage block=\"$location data $key as image\"\n    //% location.shadow=mapgettile\n    //% blockNamespace=scene color=\"#401255\"\n    //% group=\"Data\"\n    //% weight=3\n    //% blockGap=8\n    export function readDataImage(location: tiles.Location, key: string): Image | undefined {\n        return getDataForLocation(location, key) as Image;\n    }\n\n    /**\n     * Move stored data from one tile to another\n     */\n    //% blockId=tileDataMove block=\"move data from $originalLocation to $newLocation || moving attached sprites $moveSprites\"\n    //% originalLocation.shadow=mapgettile\n    //% newLocation.shadow=mapgettile\n    //% expandableArgumentMode=\"toggle\"\n    //% blockNamespace=scene color=\"#401255\"\n    //% group=\"Data\"\n    //% weight=2\n    //% blockGap=8\n    export function moveData(originalLocation: tiles.Location, newLocation: tiles.Location, moveStoredSprites: boolean = false): void {\n        const originalKey = getLocationKey(originalLocation);\n        const newKey = getLocationKey(newLocation);\n        locationDataDict[newKey] = locationDataDict[originalKey];\n        delete locationDataDict[originalKey];\n        if (moveStoredSprites) {\n            getSpritesAtLocation(newLocation).forEach((sprite: Sprite) => {\n                tiles.placeOnTile(sprite, newLocation)\n            })\n        }\n    }\n\n    /**\n     * Cleanse the data of a tile\n     */\n    //% blockId=tileDataCleanse block=\"cleanse $location data\"\n    //% location.shadow=mapgettile\n    //% blockNamespace=scene color=\"#401255\"\n    //% group=\"Data\"\n    //% weight=1\n    //% blockGap=8\n    export function cleanseData(location: tiles.Location): void {\n        const locationKey = getLocationKey(location);\n        delete locationDataDict[locationKey];\n    }\n}"}]},{"timestamp":1745297404262,"editorVersion":"2.0.53","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":2,"length1":27,"diffs":[[1,"    \"name\": \"fightboard\",\n"]]}]}]},{"timestamp":1745297411945,"editorVersion":"2.0.53","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":157,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":2,"length1":31,"diffs":[[1,"    \"name\": \"fightboard-\",\n"]]},{"start1":1214,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1745295811328,"editorVersion":"2.0.53","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>","main.ts":" ","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"fightboard\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1745297453459}